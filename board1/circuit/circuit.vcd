$date
	Mon Dec  6 15:25:11 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module circuit_tb $end
$var wire 1 ! F $end
$var reg 1 " a $end
$var reg 1 # b $end
$var reg 1 $ c $end
$var reg 1 % d $end
$scope module uut2 $end
$var wire 1 " a $end
$var wire 1 # b $end
$var wire 1 $ c $end
$var wire 1 % d $end
$var wire 2 & y [1:0] $end
$var wire 2 ' x [1:0] $end
$var wire 4 ( out [3:0] $end
$var wire 1 ! F $end
$scope module DC $end
$var wire 2 ) A [1:0] $end
$var wire 4 * D [3:0] $end
$upscope $end
$scope module MX $end
$var wire 4 + i [3:0] $end
$var wire 2 , s [1:0] $end
$var wire 1 ! F $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 - i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b0 ,
b1 +
b1 *
b0 )
b1 (
b0 '
b0 &
0%
0$
0#
0"
1!
$end
#10
0!
b1 &
b1 ,
1%
b1 -
#20
1$
b10 &
b10 ,
0%
b10 -
#30
b11 &
b11 ,
1%
b11 -
#40
b10 (
b10 *
b10 +
0!
b1 '
b1 )
1#
0$
b0 &
b0 ,
0%
b100 -
#50
1!
b1 &
b1 ,
1%
b101 -
#60
0!
1$
b10 &
b10 ,
0%
b110 -
#70
b11 &
b11 ,
1%
b111 -
#80
b100 (
b100 *
b100 +
1"
b10 '
b10 )
0#
0$
b0 &
b0 ,
0%
b1000 -
#90
b1 &
b1 ,
1%
b1001 -
#100
1!
1$
b10 &
b10 ,
0%
b1010 -
#110
0!
b11 &
b11 ,
1%
b1011 -
#120
b1000 (
b1000 *
b1000 +
b11 '
b11 )
1#
0$
b0 &
b0 ,
0%
b1100 -
#130
b1 &
b1 ,
1%
b1101 -
#140
1$
b10 &
b10 ,
0%
b1110 -
#150
1!
b11 &
b11 ,
1%
b1111 -
#160
b10000 -
